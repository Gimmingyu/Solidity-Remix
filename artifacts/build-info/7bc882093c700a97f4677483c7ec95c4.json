{
	"id": "7bc882093c700a97f4677483c7ec95c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV3.sol": {
				"content": "pragma solidity >=0.4.22 <=0.6.0;\ncontract BallotV3 {\n\n    struct Voter {                     \n        uint weight;\n        bool voted;\n        uint vote;\n    }\n    struct Proposal {                  \n        uint voteCount;\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;  \n    Proposal[] proposals;\n\n    enum Phase {Init,Regs, Vote, Done}  \n    Phase public state = Phase.Done; \n    \n       //modifiers\n   modifier validPhase(Phase reqPhase) \n    { require(state == reqPhase); \n      _; \n    } \n    \n     \n    \n    constructor (uint numProposals) public  {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; // weight 2 for testing purposes\n        //proposals.length = numProposals; -- before 0.6.0\n        for (uint prop = 0; prop < numProposals; prop ++)\n            proposals.push(Proposal(0));\n        state = Phase.Regs;\n    \n    }\n       \n    // 투표 상태 변화는 의장에 의해 순서대로 지워진다. \n    function changeState(Phase x) public {\n        if (msg.sender != chairperson) {revert();}\n        if (x < state ) revert();\n        state = x;\n    }\n    \n    // 함수 헤더에 validPhase 수정자를 사용\n    function register(address voter) public validPhase(Phase.Regs) {\n        if (msg.sender != chairperson || voters[voter].voted) revert(); \n        voters[voter].weight = 1;\n        voters[voter].voted = false;\n          \n    }\n\n    // 함수 헤더에 validPhase 수정자를 사용\n    function vote(uint toProposal) public validPhase(Phase.Vote)  {\n       \n        Voter memory sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) return; \n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n    // 함수 헤더에 validPhase 수정자를 사용\n    function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {\n        // 읽기 전용 함수로써, 체인에 Tx를 기록하지 않는다. \n        uint winningVoteCount = 0;\n        for (uint prop = 0; prop < proposals.length; prop++) \n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                winningProposal = prop;\n            }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotV3.sol": {
				"BallotV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposals",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum BallotV3.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reqWinner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BallotV3.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "toProposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotV3.sol\":34:2306  contract BallotV3 {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV3.sol\":390:400  Phase.Done */\n  0x03\n    /* \"BallotV3.sol\":369:400  Phase public state = Phase.Done */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3.sol\":539:884  constructor (uint numProposals) public  {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BallotV3.sol\":539:884  constructor (uint numProposals) public  {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"BallotV3.sol\":539:884  constructor (uint numProposals) public  {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotV3.sol\":603:613  msg.sender */\n  caller\n    /* \"BallotV3.sol\":589:600  chairperson */\n  0x00\n  dup1\n    /* \"BallotV3.sol\":589:613  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3.sol\":652:653  2 */\n  0x02\n    /* \"BallotV3.sol\":623:629  voters */\n  0x01\n    /* \"BallotV3.sol\":623:642  voters[chairperson] */\n  0x00\n    /* \"BallotV3.sol\":630:641  chairperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV3.sol\":623:642  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV3.sol\":623:649  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotV3.sol\":623:653  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV3.sol\":760:769  uint prop */\n  0x00\n    /* \"BallotV3.sol\":772:773  0 */\n  dup1\n    /* \"BallotV3.sol\":760:773  uint prop = 0 */\n  swap1\n  pop\n    /* \"BallotV3.sol\":755:844  for (uint prop = 0; prop < numProposals; prop ++)... */\ntag_6:\n    /* \"BallotV3.sol\":782:794  numProposals */\n  dup2\n    /* \"BallotV3.sol\":775:779  prop */\n  dup2\n    /* \"BallotV3.sol\":775:794  prop < numProposals */\n  lt\n    /* \"BallotV3.sol\":755:844  for (uint prop = 0; prop < numProposals; prop ++)... */\n  iszero\n  tag_7\n  jumpi\n    /* \"BallotV3.sol\":817:826  proposals */\n  0x02\n    /* \"BallotV3.sol\":832:843  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV3.sol\":841:842  0 */\n  0x00\n    /* \"BallotV3.sol\":832:843  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV3.sol\":817:844  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"BallotV3.sol\":817:844  proposals.push(Proposal(0)) */\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV3.sol\":796:803  prop ++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"BallotV3.sol\":755:844  for (uint prop = 0; prop < numProposals; prop ++)... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"BallotV3.sol\":862:872  Phase.Regs */\n  0x01\n    /* \"BallotV3.sol\":854:859  state */\n  0x03\n  0x00\n    /* \"BallotV3.sol\":854:872  state = Phase.Regs */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  invalid\ntag_10:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3.sol\":539:884  constructor (uint numProposals) public  {... */\n  pop\n    /* \"BallotV3.sol\":34:2306  contract BallotV3 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV3.sol\":34:2306  contract BallotV3 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotV3.sol\":34:2306  contract BallotV3 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x268f1153\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x508b30c9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV3.sol\":1472:1792  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"BallotV3.sol\":1472:1792  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"BallotV3.sol\":973:1121  function changeState(Phase x) public {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"BallotV3.sol\":973:1121  function changeState(Phase x) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"BallotV3.sol\":1186:1411  function register(address voter) public validPhase(Phase.Regs) {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"BallotV3.sol\":1186:1411  function register(address voter) public validPhase(Phase.Regs) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"BallotV3.sol\":1853:2304  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV3.sol\":369:400  Phase public state = Phase.Done */\n    tag_7:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV3.sol\":1472:1792  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n    tag_10:\n        /* \"BallotV3.sol\":1521:1531  Phase.Vote */\n      0x02\n        /* \"BallotV3.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n        /* \"BallotV3.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      eq\n        /* \"BallotV3.sol\":473:499  require(state == reqPhase) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"BallotV3.sol\":1552:1571  Voter memory sender */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"BallotV3.sol\":1574:1580  voters */\n      0x01\n        /* \"BallotV3.sol\":1574:1592  voters[msg.sender] */\n      0x00\n        /* \"BallotV3.sol\":1581:1591  msg.sender */\n      caller\n        /* \"BallotV3.sol\":1574:1592  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3.sol\":1552:1592  Voter memory sender = voters[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"BallotV3.sol\":1606:1612  sender */\n      dup1\n        /* \"BallotV3.sol\":1606:1618  sender.voted */\n      0x20\n      add\n      mload\n        /* \"BallotV3.sol\":1606:1652  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"BallotV3.sol\":1636:1645  proposals */\n      0x02\n        /* \"BallotV3.sol\":1636:1652  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV3.sol\":1622:1632  toProposal */\n      dup4\n        /* \"BallotV3.sol\":1622:1652  toProposal >= proposals.length */\n      lt\n      iszero\n        /* \"BallotV3.sol\":1606:1652  sender.voted || toProposal >= proposals.length */\n    tag_29:\n        /* \"BallotV3.sol\":1602:1661  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_30\n      jumpi\n        /* \"BallotV3.sol\":1654:1661  return; */\n      pop\n      jump(tag_26)\n        /* \"BallotV3.sol\":1602:1661  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_30:\n        /* \"BallotV3.sol\":1686:1690  true */\n      0x01\n        /* \"BallotV3.sol\":1671:1677  sender */\n      dup2\n        /* \"BallotV3.sol\":1671:1683  sender.voted */\n      0x20\n      add\n        /* \"BallotV3.sol\":1671:1690  sender.voted = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV3.sol\":1714:1724  toProposal */\n      dup3\n        /* \"BallotV3.sol\":1700:1706  sender */\n      dup2\n        /* \"BallotV3.sol\":1700:1711  sender.vote */\n      0x40\n      add\n        /* \"BallotV3.sol\":1700:1724  sender.vote = toProposal */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV3.sol\":1772:1778  sender */\n      dup1\n        /* \"BallotV3.sol\":1772:1785  sender.weight */\n      0x00\n      add\n      mload\n        /* \"BallotV3.sol\":1737:1746  proposals */\n      0x02\n        /* \"BallotV3.sol\":1747:1757  toProposal */\n      dup5\n        /* \"BallotV3.sol\":1737:1758  proposals[toProposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3.sol\":1737:1768  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV3.sol\":1737:1785  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV3.sol\":508:509  _ */\n      pop\n    tag_26:\n        /* \"BallotV3.sol\":1472:1792  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV3.sol\":973:1121  function changeState(Phase x) public {... */\n    tag_13:\n        /* \"BallotV3.sol\":1038:1049  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3.sol\":1024:1049  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3.sol\":1024:1034  msg.sender */\n      caller\n        /* \"BallotV3.sol\":1024:1049  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV3.sol\":1020:1062  if (msg.sender != chairperson) {revert();} */\n      tag_34\n      jumpi\n        /* \"BallotV3.sol\":1052:1060  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV3.sol\":1020:1062  if (msg.sender != chairperson) {revert();} */\n    tag_34:\n        /* \"BallotV3.sol\":1079:1084  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3.sol\":1075:1084  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n        /* \"BallotV3.sol\":1075:1076  x */\n      dup2\n        /* \"BallotV3.sol\":1075:1084  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      lt\n        /* \"BallotV3.sol\":1071:1095  if (x < state ) revert() */\n      iszero\n      tag_37\n      jumpi\n        /* \"BallotV3.sol\":1087:1095  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV3.sol\":1071:1095  if (x < state ) revert() */\n    tag_37:\n        /* \"BallotV3.sol\":1113:1114  x */\n      dup1\n        /* \"BallotV3.sol\":1105:1110  state */\n      0x03\n      0x00\n        /* \"BallotV3.sol\":1105:1114  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3.sol\":973:1121  function changeState(Phase x) public {... */\n      pop\n      jump\t// out\n        /* \"BallotV3.sol\":1186:1411  function register(address voter) public validPhase(Phase.Regs) {... */\n    tag_16:\n        /* \"BallotV3.sol\":1237:1247  Phase.Regs */\n      0x01\n        /* \"BallotV3.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n        /* \"BallotV3.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      eq\n        /* \"BallotV3.sol\":473:499  require(state == reqPhase) */\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n        /* \"BallotV3.sol\":1277:1288  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3.sol\":1263:1288  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3.sol\":1263:1273  msg.sender */\n      caller\n        /* \"BallotV3.sol\":1263:1288  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotV3.sol\":1263:1311  msg.sender != chairperson || voters[voter].voted */\n      dup1\n      tag_44\n      jumpi\n      pop\n        /* \"BallotV3.sol\":1292:1298  voters */\n      0x01\n        /* \"BallotV3.sol\":1292:1305  voters[voter] */\n      0x00\n        /* \"BallotV3.sol\":1299:1304  voter */\n      dup4\n        /* \"BallotV3.sol\":1292:1305  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3.sol\":1292:1311  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3.sol\":1263:1311  msg.sender != chairperson || voters[voter].voted */\n    tag_44:\n        /* \"BallotV3.sol\":1259:1321  if (msg.sender != chairperson || voters[voter].voted) revert() */\n      iszero\n      tag_45\n      jumpi\n        /* \"BallotV3.sol\":1313:1321  revert() */\n      0x00\n      dup1\n      revert\n        /* \"BallotV3.sol\":1259:1321  if (msg.sender != chairperson || voters[voter].voted) revert() */\n    tag_45:\n        /* \"BallotV3.sol\":1355:1356  1 */\n      0x01\n        /* \"BallotV3.sol\":1332:1338  voters */\n      dup1\n        /* \"BallotV3.sol\":1332:1345  voters[voter] */\n      0x00\n        /* \"BallotV3.sol\":1339:1344  voter */\n      dup5\n        /* \"BallotV3.sol\":1332:1345  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3.sol\":1332:1352  voters[voter].weight */\n      0x00\n      add\n        /* \"BallotV3.sol\":1332:1356  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV3.sol\":1388:1393  false */\n      0x00\n        /* \"BallotV3.sol\":1366:1372  voters */\n      0x01\n        /* \"BallotV3.sol\":1366:1379  voters[voter] */\n      0x00\n        /* \"BallotV3.sol\":1373:1378  voter */\n      dup5\n        /* \"BallotV3.sol\":1366:1379  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3.sol\":1366:1385  voters[voter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV3.sol\":1366:1393  voters[voter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3.sol\":1186:1411  function register(address voter) public validPhase(Phase.Regs) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV3.sol\":1853:2304  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_18:\n        /* \"BallotV3.sol\":1918:1938  uint winningProposal */\n      0x00\n        /* \"BallotV3.sol\":1892:1902  Phase.Done */\n      0x03\n        /* \"BallotV3.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n        /* \"BallotV3.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      eq\n        /* \"BallotV3.sol\":473:499  require(state == reqPhase) */\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n        /* \"BallotV3.sol\":2030:2051  uint winningVoteCount */\n      0x00\n        /* \"BallotV3.sol\":2054:2055  0 */\n      dup1\n        /* \"BallotV3.sol\":2030:2055  uint winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotV3.sol\":2070:2079  uint prop */\n      0x00\n        /* \"BallotV3.sol\":2082:2083  0 */\n      dup1\n        /* \"BallotV3.sol\":2070:2083  uint prop = 0 */\n      swap1\n      pop\n        /* \"BallotV3.sol\":2065:2298  for (uint prop = 0; prop < proposals.length; prop++) ... */\n    tag_51:\n        /* \"BallotV3.sol\":2092:2101  proposals */\n      0x02\n        /* \"BallotV3.sol\":2092:2108  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV3.sol\":2085:2089  prop */\n      dup2\n        /* \"BallotV3.sol\":2085:2108  prop < proposals.length */\n      lt\n        /* \"BallotV3.sol\":2065:2298  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      iszero\n      tag_52\n      jumpi\n        /* \"BallotV3.sol\":2163:2179  winningVoteCount */\n      dup2\n        /* \"BallotV3.sol\":2135:2144  proposals */\n      0x02\n        /* \"BallotV3.sol\":2145:2149  prop */\n      dup3\n        /* \"BallotV3.sol\":2135:2150  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3.sol\":2135:2160  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV3.sol\":2135:2179  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV3.sol\":2131:2298  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_56\n      jumpi\n        /* \"BallotV3.sol\":2218:2227  proposals */\n      0x02\n        /* \"BallotV3.sol\":2228:2232  prop */\n      dup2\n        /* \"BallotV3.sol\":2218:2233  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3.sol\":2218:2243  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV3.sol\":2199:2243  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV3.sol\":2279:2283  prop */\n      dup1\n        /* \"BallotV3.sol\":2261:2283  winningProposal = prop */\n      swap4\n      pop\n        /* \"BallotV3.sol\":2131:2298  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_56:\n        /* \"BallotV3.sol\":2110:2116  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotV3.sol\":2065:2298  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      jump(tag_51)\n    tag_52:\n      pop\n        /* \"BallotV3.sol\":508:509  _ */\n      pop\n        /* \"BallotV3.sol\":1853:2304  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotV3.sol\":369:400  Phase public state = Phase.Done */\n    tag_20:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BallotV3.sol\":34:2306  contract BallotV3 {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202890ac6fd4ad12fefde479d38a5cbf63cbb59457fa57455e6e647d0622076ab564736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260038060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b5060405161075a38038061075a8339818101604052602081101561005657600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060008090505b8181101561016e57600260405180602001604052806000815250908060018154018082558091505060019003906000526020600020016000909190919091506000820151816000015550508080600101915050610116565b506001600360006101000a81548160ff0219169083600381111561018e57fe5b0217905550506105b7806101a36000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f11531461008a5780634420e486146100bb578063508b30c9146100ff578063c19d93fb1461011d575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610149565b005b6100b9600480360360208110156100a057600080fd5b81019080803560ff16906020019092919050505061026c565b005b6100fd600480360360208110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031d565b005b6101076104a8565b6040518082815260200191505060405180910390f35b61012561054b565b6040518082600381111561013557fe5b60ff16815260200191505060405180910390f35b600280600381111561015757fe5b600360009054906101000a900460ff16600381111561017257fe5b1461017c57600080fd5b61018461055e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001518061021457506002805490508310155b1561021f5750610268565b60018160200190151590811515815250508281604001818152505080600001516002848154811061024c57fe5b9060005260206000200160000160008282540192505081905550505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c557600080fd5b600360009054906101000a900460ff1660038111156102e057fe5b8160038111156102ec57fe5b10156102f757600080fd5b80600360006101000a81548160ff0219169083600381111561031557fe5b021790555050565b600180600381111561032b57fe5b600360009054906101000a900460ff16600381111561034657fe5b1461035057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806103f85750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561040257600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505050565b600060038060038111156104b857fe5b600360009054906101000a900460ff1660038111156104d357fe5b146104dd57600080fd5b600080905060008090505b60028054905081101561054557816002828154811061050357fe5b90600052602060002001600001541115610538576002818154811061052457fe5b906000526020600020016000015491508093505b80806001019150506104e8565b50505090565b600360009054906101000a900460ff1681565b60405180606001604052806000815260200160001515815260200160008152509056fea26469706673582212202890ac6fd4ad12fefde479d38a5cbf63cbb59457fa57455e6e647d0622076ab564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x75A CODESIZE SUB DUP1 PUSH2 0x75A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x116 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0x5B7 DUP1 PUSH2 0x1A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x214 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT ISZERO JUMPDEST ISZERO PUSH2 0x21F JUMPI POP PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E0 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EC JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x315 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32B JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x346 JUMPI INVALID JUMPDEST EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x3F8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI INVALID JUMPDEST EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x545 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x503 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x524 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4E8 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP1 0xAC PUSH16 0xD4AD12FEFDE479D38A5CBF63CBB59457 STATICCALL JUMPI GASLIMIT 0x5E PUSH15 0x647D0622076AB564736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:2272:0:-:0;;;390:10;369:31;;;;;;;;;;;;;;;;;;;;;;;;;;539:345;8:9:-1;5:2;;;30:1;27;20:12;5:2;539:345:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;539:345:0;;;;;;;;;;;;;;;;603:10;589:11;;:24;;;;;;;;;;;;;;;;;;652:1;623:6;:19;630:11;;;;;;;;;;;623:19;;;;;;;;;;;;;;;:26;;:30;;;;760:9;772:1;760:13;;755:89;782:12;775:4;:19;755:89;;;817:9;832:11;;;;;;;;841:1;832:11;;;817:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;817:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;796:7;;;;;;;755:89;;;;862:10;854:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;539:345;34:2272;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f11531461008a5780634420e486146100bb578063508b30c9146100ff578063c19d93fb1461011d575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610149565b005b6100b9600480360360208110156100a057600080fd5b81019080803560ff16906020019092919050505061026c565b005b6100fd600480360360208110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031d565b005b6101076104a8565b6040518082815260200191505060405180910390f35b61012561054b565b6040518082600381111561013557fe5b60ff16815260200191505060405180910390f35b600280600381111561015757fe5b600360009054906101000a900460ff16600381111561017257fe5b1461017c57600080fd5b61018461055e565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001518061021457506002805490508310155b1561021f5750610268565b60018160200190151590811515815250508281604001818152505080600001516002848154811061024c57fe5b9060005260206000200160000160008282540192505081905550505b5050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c557600080fd5b600360009054906101000a900460ff1660038111156102e057fe5b8160038111156102ec57fe5b10156102f757600080fd5b80600360006101000a81548160ff0219169083600381111561031557fe5b021790555050565b600180600381111561032b57fe5b600360009054906101000a900460ff16600381111561034657fe5b1461035057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806103f85750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561040257600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505050565b600060038060038111156104b857fe5b600360009054906101000a900460ff1660038111156104d357fe5b146104dd57600080fd5b600080905060008090505b60028054905081101561054557816002828154811061050357fe5b90600052602060002001600001541115610538576002818154811061052457fe5b906000526020600020016000015491508093505b80806001019150506104e8565b50505090565b600360009054906101000a900460ff1681565b60405180606001604052806000815260200160001515815260200160008152509056fea26469706673582212202890ac6fd4ad12fefde479d38a5cbf63cbb59457fa57455e6e647d0622076ab564736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x55E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP1 PUSH2 0x214 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT ISZERO JUMPDEST ISZERO PUSH2 0x21F JUMPI POP PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E0 JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EC JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x315 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x32B JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x346 JUMPI INVALID JUMPDEST EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x3F8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4B8 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4D3 JUMPI INVALID JUMPDEST EQ PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x545 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x503 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x538 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x524 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x4E8 JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP1 0xAC PUSH16 0xD4AD12FEFDE479D38A5CBF63CBB59457 STATICCALL JUMPI GASLIMIT 0x5E PUSH15 0x647D0622076AB564736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:2272:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34:2272:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:320;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1472:320:0;;;;;;;;;;;;;;;;;:::i;:::-;;973:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;973:148:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1186:225;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1186:225:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1853:451;;;:::i;:::-;;;;;;;;;;;;;;;;;;;369:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1472:320;1521:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;1552:19:::1;;:::i;:::-;1574:6;:18;1581:10;1574:18;;;;;;;;;;;;;;;1552:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1606:6;:12;;;:46;;;;1636:9;:16;;;;1622:10;:30;;1606:46;1602:59;;;1654:7;;;1602:59;1686:4;1671:6;:12;;:19;;;;;;;;;::::0;::::1;1714:10;1700:6;:11;;:24;;;::::0;::::1;1772:6;:13;;;1737:9;1747:10;1737:21;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;508:1;;1472:320:::0;;:::o;973:148::-;1038:11;;;;;;;;;;;1024:25;;:10;:25;;;1020:42;;1052:8;;;1020:42;1079:5;;;;;;;;;;;1075:9;;;;;;;;:1;:9;;;;;;;;;1071:24;;;1087:8;;;1071:24;1113:1;1105:5;;:9;;;;;;;;;;;;;;;;;;;;;;;;973:148;:::o;1186:225::-;1237:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;1277:11:::1;::::0;::::1;;;;;;;;;1263:25;;:10;:25;;;;:48;;;;1292:6;:13;1299:5;1292:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;1263:48;1259:62;;;1313:8;::::0;::::1;1259:62;1355:1;1332:6:::0;:13:::1;1339:5;1332:13;;;;;;;;;;;;;;;:20;;:24;;;;1388:5;1366:6;:13;1373:5;1366:13;;;;;;;;;;;;;;;:19;;;:27;;;;;;;;;;;;;;;;;;1186:225:::0;;:::o;1853:451::-;1918:20;1892:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;2030:21:::1;2054:1:::0;2030:25:::1;;2070:9;2082:1:::0;2070:13:::1;;2065:233;2092:9;:16;;;;2085:4;:23;2065:233;;;2163:16;2135:9;2145:4;2135:15;;;;;;;;;;;;;;;:25;;;:44;2131:167;;;2218:9;2228:4;2218:15;;;;;;;;;;;;;;;:25;;;2199:44;;2279:4;2261:22;;2131:167;2110:6;;;;;;;2065:233;;;;508:1;1853:451:::0;;:::o;369:31::-;;;;;;;;;;;;;:::o;34:2272::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "292600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "22905",
								"register(address)": "44075",
								"reqWinner()": "infinite",
								"state()": "1139",
								"vote(uint256)": "26541"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "MSTORE"
								},
								{
									"begin": 390,
									"end": 400,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "EXP"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SLOAD"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "MUL"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "NOT"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "AND"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SWAP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP4"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "GT"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "ISZERO"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "JUMPI"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "INVALID"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "JUMPDEST"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "MUL"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "OR"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SWAP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SSTORE"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "POP"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "MLOAD"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "PUSHSIZE"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "CODESIZE"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SUB"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "PUSHSIZE"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP4"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "CODECOPY"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "DUP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "MLOAD"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP3"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP2"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 603,
									"end": 613,
									"name": "CALLER"
								},
								{
									"begin": 589,
									"end": 600,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 589,
									"end": 600,
									"name": "DUP1"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "EXP"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "DUP2"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "SLOAD"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "DUP2"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "MUL"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "NOT"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "AND"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "SWAP1"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "DUP4"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "AND"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "MUL"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "OR"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "SWAP1"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "SSTORE"
								},
								{
									"begin": 589,
									"end": 613,
									"name": "POP"
								},
								{
									"begin": 652,
									"end": 653,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 623,
									"end": 629,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "DUP1"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "SWAP1"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "SLOAD"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "SWAP1"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "EXP"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "SWAP1"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "DIV"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 630,
									"end": 641,
									"name": "AND"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "AND"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "AND"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "DUP2"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "MSTORE"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "ADD"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "SWAP1"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "DUP2"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "MSTORE"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "ADD"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 623,
									"end": 642,
									"name": "KECCAK256"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "ADD"
								},
								{
									"begin": 623,
									"end": 653,
									"name": "DUP2"
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SWAP1"
								},
								{
									"begin": 623,
									"end": 653,
									"name": "SSTORE"
								},
								{
									"begin": 623,
									"end": 653,
									"name": "POP"
								},
								{
									"begin": 760,
									"end": 769,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 772,
									"end": 773,
									"name": "DUP1"
								},
								{
									"begin": 760,
									"end": 773,
									"name": "SWAP1"
								},
								{
									"begin": 760,
									"end": 773,
									"name": "POP"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "JUMPDEST"
								},
								{
									"begin": 782,
									"end": 794,
									"name": "DUP2"
								},
								{
									"begin": 775,
									"end": 779,
									"name": "DUP2"
								},
								{
									"begin": 775,
									"end": 794,
									"name": "LT"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "ISZERO"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "JUMPI"
								},
								{
									"begin": 817,
									"end": 826,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "MLOAD"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "DUP1"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "ADD"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "MSTORE"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "DUP1"
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "DUP2"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "MSTORE"
								},
								{
									"begin": 832,
									"end": 843,
									"name": "POP"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SUB"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "MSTORE"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "KECCAK256"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "ADD"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP2"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP2"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP1"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SWAP2"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "DUP3"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "ADD"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "MLOAD"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "DUP2"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "ADD"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "SSTORE"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 817,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "DUP1"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "DUP1"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "ADD"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "SWAP2"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "POP"
								},
								{
									"begin": 796,
									"end": 803,
									"name": "POP"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "JUMP"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "JUMPDEST"
								},
								{
									"begin": 755,
									"end": 844,
									"name": "POP"
								},
								{
									"begin": 862,
									"end": 872,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 854,
									"end": 859,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 854,
									"end": 859,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "EXP"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "SLOAD"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "MUL"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "NOT"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "AND"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "SWAP1"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "DUP4"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "GT"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "ISZERO"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "JUMPI"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "INVALID"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "JUMPDEST"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "MUL"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "OR"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "SWAP1"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "SSTORE"
								},
								{
									"begin": 854,
									"end": 872,
									"name": "POP"
								},
								{
									"begin": 539,
									"end": 884,
									"name": "POP"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "CODECOPY"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 2306,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202890ac6fd4ad12fefde479d38a5cbf63cbb59457fa57455e6e647d0622076ab564736f6c63430006000033",
									".code": [
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "LT"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "SHR"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "508B30C9"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "C19D93FB"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "REVERT"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "DUP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "DUP2"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "ADD"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "DUP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "DUP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "ADD"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP3"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP2"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "STOP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "ADD"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "AND"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "ADD"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP3"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP2"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "STOP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "DUP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "DUP2"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "ADD"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "DUP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "DUP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "AND"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "ADD"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP3"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP2"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "STOP"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "MLOAD"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "DUP1"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "DUP3"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "DUP2"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "MSTORE"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "ADD"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "SWAP2"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "POP"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "POP"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "MLOAD"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "DUP1"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "SWAP2"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "SUB"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "SWAP1"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "RETURN"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "GT"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPI"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "INVALID"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "RETURN"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "JUMPDEST"
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1552,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1552,
											"end": 1571,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1571,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1552,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 1574,
											"end": 1580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1591,
											"name": "CALLER"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1592,
											"name": "KECCAK256"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "MLOAD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SLOAD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SLOAD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "EXP"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DIV"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "AND"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ISZERO"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP3"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SLOAD"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1592,
											"name": "POP"
										},
										{
											"begin": 1606,
											"end": 1612,
											"name": "DUP1"
										},
										{
											"begin": 1606,
											"end": 1618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1618,
											"name": "ADD"
										},
										{
											"begin": 1606,
											"end": 1618,
											"name": "MLOAD"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "DUP1"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "JUMPI"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "DUP1"
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "SLOAD"
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "SWAP1"
										},
										{
											"begin": 1636,
											"end": 1652,
											"name": "POP"
										},
										{
											"begin": 1622,
											"end": 1632,
											"name": "DUP4"
										},
										{
											"begin": 1622,
											"end": 1652,
											"name": "LT"
										},
										{
											"begin": 1622,
											"end": 1652,
											"name": "ISZERO"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1606,
											"end": 1652,
											"name": "JUMPDEST"
										},
										{
											"begin": 1602,
											"end": 1661,
											"name": "ISZERO"
										},
										{
											"begin": 1602,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1602,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "POP"
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1654,
											"end": 1661,
											"name": "JUMP"
										},
										{
											"begin": 1602,
											"end": 1661,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1602,
											"end": 1661,
											"name": "JUMPDEST"
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "ISZERO"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "DUP2"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "MSTORE"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1671,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1724,
											"name": "DUP3"
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP2"
										},
										{
											"begin": 1700,
											"end": 1711,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1700,
											"end": 1711,
											"name": "ADD"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "DUP2"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "DUP2"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "MSTORE"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "POP"
										},
										{
											"begin": 1700,
											"end": 1724,
											"name": "POP"
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "DUP1"
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "ADD"
										},
										{
											"begin": 1772,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1747,
											"end": 1757,
											"name": "DUP5"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "LT"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "JUMPI"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "INVALID"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "MSTORE"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "KECCAK256"
										},
										{
											"begin": 1737,
											"end": 1758,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1768,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1768,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SLOAD"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SWAP3"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SSTORE"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "JUMPDEST"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "POP"
										},
										{
											"begin": 1472,
											"end": 1792,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "JUMPDEST"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "DUP1"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "SWAP1"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "SLOAD"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "SWAP1"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "EXP"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "SWAP1"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "DIV"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1024,
											"end": 1049,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1034,
											"name": "CALLER"
										},
										{
											"begin": 1024,
											"end": 1049,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1024,
											"end": 1049,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1049,
											"name": "EQ"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPI"
										},
										{
											"begin": 1052,
											"end": 1060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1060,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1060,
											"name": "REVERT"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1020,
											"end": 1062,
											"name": "JUMPDEST"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SLOAD"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "EXP"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "SWAP1"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "DIV"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1079,
											"end": 1084,
											"name": "AND"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP2"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "GT"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "JUMPI"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "INVALID"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "JUMPDEST"
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "DUP2"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP2"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "GT"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "ISZERO"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "JUMPI"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "INVALID"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "JUMPDEST"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "LT"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "JUMPI"
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1095,
											"name": "REVERT"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1071,
											"end": 1095,
											"name": "JUMPDEST"
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "EXP"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "SLOAD"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "MUL"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "NOT"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP4"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "GT"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "ISZERO"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "JUMPI"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "INVALID"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "JUMPDEST"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "MUL"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "OR"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "SSTORE"
										},
										{
											"begin": 1105,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "POP"
										},
										{
											"begin": 973,
											"end": 1121,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMPDEST"
										},
										{
											"begin": 1237,
											"end": 1247,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "SLOAD"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "EXP"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "DIV"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1273,
											"name": "CALLER"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1263,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1304,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "MSTORE"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "ADD"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "MSTORE"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "ADD"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "KECCAK256"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "DIV"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 1259,
											"end": 1321,
											"name": "ISZERO"
										},
										{
											"begin": 1259,
											"end": 1321,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1259,
											"end": 1321,
											"name": "JUMPI"
										},
										{
											"begin": 1313,
											"end": 1321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1321,
											"name": "REVERT"
										},
										{
											"begin": 1259,
											"end": 1321,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1259,
											"end": 1321,
											"name": "JUMPDEST"
										},
										{
											"begin": 1355,
											"end": 1356,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP1"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1344,
											"name": "DUP5"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1345,
											"name": "KECCAK256"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "ADD"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "DUP2"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "SWAP1"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "SSTORE"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "POP"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP5"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "AND"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "AND"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "KECCAK256"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "ADD"
										},
										{
											"begin": 1366,
											"end": 1385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "EXP"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "DUP2"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "SLOAD"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "DUP2"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "MUL"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "NOT"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "AND"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "DUP4"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "MUL"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "OR"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "SSTORE"
										},
										{
											"begin": 1366,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1186,
											"end": 1411,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "JUMPDEST"
										},
										{
											"begin": 1918,
											"end": 1938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1902,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "DUP1"
										},
										{
											"begin": 2030,
											"end": 2055,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2083,
											"name": "SWAP1"
										},
										{
											"begin": 2070,
											"end": 2083,
											"name": "POP"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "JUMPDEST"
										},
										{
											"begin": 2092,
											"end": 2101,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2092,
											"end": 2108,
											"name": "DUP1"
										},
										{
											"begin": 2092,
											"end": 2108,
											"name": "SLOAD"
										},
										{
											"begin": 2092,
											"end": 2108,
											"name": "SWAP1"
										},
										{
											"begin": 2092,
											"end": 2108,
											"name": "POP"
										},
										{
											"begin": 2085,
											"end": 2089,
											"name": "DUP2"
										},
										{
											"begin": 2085,
											"end": 2108,
											"name": "LT"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "ISZERO"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "JUMPI"
										},
										{
											"begin": 2163,
											"end": 2179,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2144,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2145,
											"end": 2149,
											"name": "DUP3"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "SLOAD"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "DUP2"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "LT"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "JUMPI"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "INVALID"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "JUMPDEST"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "SWAP1"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "MSTORE"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "KECCAK256"
										},
										{
											"begin": 2135,
											"end": 2150,
											"name": "ADD"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "ADD"
										},
										{
											"begin": 2135,
											"end": 2160,
											"name": "SLOAD"
										},
										{
											"begin": 2135,
											"end": 2179,
											"name": "GT"
										},
										{
											"begin": 2131,
											"end": 2298,
											"name": "ISZERO"
										},
										{
											"begin": 2131,
											"end": 2298,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 2131,
											"end": 2298,
											"name": "JUMPI"
										},
										{
											"begin": 2218,
											"end": 2227,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2228,
											"end": 2232,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "SLOAD"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "DUP2"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "LT"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "JUMPI"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "INVALID"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "JUMPDEST"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "SWAP1"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "MSTORE"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "KECCAK256"
										},
										{
											"begin": 2218,
											"end": 2233,
											"name": "ADD"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "ADD"
										},
										{
											"begin": 2218,
											"end": 2243,
											"name": "SLOAD"
										},
										{
											"begin": 2199,
											"end": 2243,
											"name": "SWAP2"
										},
										{
											"begin": 2199,
											"end": 2243,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2283,
											"name": "DUP1"
										},
										{
											"begin": 2261,
											"end": 2283,
											"name": "SWAP4"
										},
										{
											"begin": 2261,
											"end": 2283,
											"name": "POP"
										},
										{
											"begin": 2131,
											"end": 2298,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 2131,
											"end": 2298,
											"name": "JUMPDEST"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "DUP1"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "ADD"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "SWAP2"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "POP"
										},
										{
											"begin": 2110,
											"end": 2116,
											"name": "POP"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "JUMP"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "JUMPDEST"
										},
										{
											"begin": 2065,
											"end": 2298,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "POP"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "SWAP1"
										},
										{
											"begin": 1853,
											"end": 2304,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "EXP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DIV"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MLOAD"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "SWAP1"
										},
										{
											"begin": 34,
											"end": 2306,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"register(address)": "4420e486",
							"reqWinner()": "508b30c9",
							"state()": "c19d93fb",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum BallotV3.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reqWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BallotV3.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toProposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BallotV3.sol\":\"BallotV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV3.sol\":{\"keccak256\":\"0xaba1e2322dc3e0eb521dc05bc97dbb732657e45caeb76eb76361db9b3e423fef\",\"urls\":[\"bzz-raw://716814602822e059a0c88246008a4dbe18d10224c257a35576cd5f19e321bbdd\",\"dweb:/ipfs/QmaArurps3CjpcuvLpKvYRADKCGJ7unSzLdZHpx6GUeWz5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV3.sol:BallotV3",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 17,
								"contract": "BallotV3.sol:BallotV3",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 20,
								"contract": "BallotV3.sol:BallotV3",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 29,
								"contract": "BallotV3.sol:BallotV3",
								"label": "state",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(Phase)25"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct BallotV3.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)25": {
								"encoding": "inplace",
								"label": "enum BallotV3.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BallotV3.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct BallotV3.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV3.sol:BallotV3",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct BallotV3.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV3.sol:BallotV3",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV3.sol:BallotV3",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV3.sol:BallotV3",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BallotV3.sol": {
				"ast": {
					"absolutePath": "BallotV3.sol",
					"exportedSymbols": {
						"BallotV3": [
							238
						]
					},
					"id": 239,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "BallotV3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BallotV3.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "103:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "103:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "124:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "124:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "144:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "144:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 238,
									"src": "59:101:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BallotV3.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 11,
											"src": "209:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "209:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 238,
									"src": "165:65:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "236:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "261:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct BallotV3.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "261:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct BallotV3.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "280:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct BallotV3.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "301:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct BallotV3.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "301:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct BallotV3.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "301:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct BallotV3.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "BallotV3.Phase",
									"id": 25,
									"members": [
										{
											"id": 21,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "340:4:0"
										},
										{
											"id": 22,
											"name": "Regs",
											"nodeType": "EnumValue",
											"src": "345:4:0"
										},
										{
											"id": 23,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "351:4:0"
										},
										{
											"id": 24,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "357:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "328:34:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 29,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 238,
									"src": "369:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$25",
										"typeString": "enum BallotV3.Phase"
									},
									"typeName": {
										"contractScope": null,
										"id": 26,
										"name": "Phase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 25,
										"src": "369:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$25",
											"typeString": "enum BallotV3.Phase"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 27,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 25,
											"src": "390:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
												"typeString": "type(enum BallotV3.Phase)"
											}
										},
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Done",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "390:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$25",
											"typeString": "enum BallotV3.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "471:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$25",
																"typeString": "enum BallotV3.Phase"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV3.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "reqPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "490:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV3.Phase"
																}
															},
															"src": "481:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															256,
															257
														],
														"referencedDeclaration": 256,
														"src": "473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "473:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "473:26:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "508:1:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"name": "validPhase",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "reqPhase",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 41,
												"src": "450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$25",
													"typeString": "enum BallotV3.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 30,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 25,
													"src": "450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:16:0"
									},
									"src": "430:87:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "579:305:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "589:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "603:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "603:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "589:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "589:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 51,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "623:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV3.Voter storage ref)"
																}
															},
															"id": 53,
															"indexExpression": {
																"argumentTypes": null,
																"id": 52,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "630:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "623:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV3.Voter storage ref"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "623:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "652:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "623:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "623:30:0"
											},
											{
												"body": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "841:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"name": "Proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "832:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																		"typeString": "type(struct BallotV3.Proposal storage pointer)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "832:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct BallotV3.Proposal memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct BallotV3.Proposal memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 68,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "817:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "817:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																"typeString": "function (struct BallotV3.Proposal storage ref)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "817:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 75,
													"nodeType": "ExpressionStatement",
													"src": "817:27:0"
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 62,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "775:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 63,
														"name": "numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "782:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "775:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"initializationExpression": {
													"assignments": [
														59
													],
													"declarations": [
														{
															"constant": false,
															"id": 59,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 76,
															"src": "760:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 58,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "760:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 61,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "772:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "760:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "796:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 65,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 67,
													"nodeType": "ExpressionStatement",
													"src": "796:7:0"
												},
												"nodeType": "ForStatement",
												"src": "755:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "854:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 78,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
																"typeString": "type(enum BallotV3.Phase)"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Regs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "862:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"src": "854:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "854:18:0"
											}
										]
									},
									"documentation": null,
									"id": 83,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"name": "numProposals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "552:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "552:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "551:19:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "579:0:0"
									},
									"scope": 238,
									"src": "539:345:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1010:111:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 88,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "1024:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1024:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1038:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1024:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 96,
												"nodeType": "IfStatement",
												"src": "1020:42:0",
												"trueBody": {
													"id": 95,
													"nodeType": "Block",
													"src": "1051:11:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 92,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		258,
																		259
																	],
																	"referencedDeclaration": 258,
																	"src": "1052:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1052:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 94,
															"nodeType": "ExpressionStatement",
															"src": "1052:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 97,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 98,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"src": "1075:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 103,
												"nodeType": "IfStatement",
												"src": "1071:24:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																258,
																259
															],
															"referencedDeclaration": 258,
															"src": "1087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1087:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 102,
													"nodeType": "ExpressionStatement",
													"src": "1087:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1105:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "1113:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV3.Phase"
														}
													},
													"src": "1105:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1105:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "268f1153",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 109,
												"src": "994:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$25",
													"typeString": "enum BallotV3.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 84,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 25,
													"src": "994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "993:9:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:0:0"
									},
									"scope": 238,
									"src": "973:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1249:162:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1263:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1263:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 120,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1277:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1263:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 122,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1292:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV3.Voter storage ref)"
																}
															},
															"id": 124,
															"indexExpression": {
																"argumentTypes": null,
																"id": 123,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1299:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1292:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV3.Voter storage ref"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1292:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1263:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1259:62:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 127,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																258,
																259
															],
															"referencedDeclaration": 258,
															"src": "1313:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1313:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 129,
													"nodeType": "ExpressionStatement",
													"src": "1313:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV3.Voter storage ref)"
																}
															},
															"id": 133,
															"indexExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1339:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1332:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV3.Voter storage ref"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1332:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1355:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1332:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1332:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 138,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1366:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV3.Voter storage ref)"
																}
															},
															"id": 140,
															"indexExpression": {
																"argumentTypes": null,
																"id": 139,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1373:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1366:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV3.Voter storage ref"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1366:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1388:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1366:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1366:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4420e486",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 114,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1237:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV3.Phase)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Regs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1237:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												}
											],
											"id": 116,
											"modifierName": {
												"argumentTypes": null,
												"id": 113,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1226:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV3.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1226:22:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1203:15:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:0:0"
									},
									"scope": 238,
									"src": "1186:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1534:258:0",
										"statements": [
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 191,
														"src": "1552:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
															"typeString": "struct BallotV3.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 155,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1552:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct BallotV3.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 161,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1574:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct BallotV3.Voter storage ref)"
														}
													},
													"id": 160,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 158,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "1581:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1581:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1574:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct BallotV3.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1552:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 162,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV3.Voter memory"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1606:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1622:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 165,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1636:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1636:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1622:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1606:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 170,
												"nodeType": "IfStatement",
												"src": "1602:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 154,
													"id": 169,
													"nodeType": "Return",
													"src": "1654:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 171,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV3.Voter memory"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1671:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1686:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1671:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1671:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 177,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1700:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV3.Voter memory"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1700:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 180,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1714:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1700:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1700:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 183,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1737:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
																}
															},
															"id": 185,
															"indexExpression": {
																"argumentTypes": null,
																"id": 184,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1747:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1737:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct BallotV3.Proposal storage ref"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1737:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 187,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "1772:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV3.Voter memory"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1772:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1737:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1737:48:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0121b93f",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 151,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1521:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV3.Phase)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1521:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												}
											],
											"id": 153,
											"modifierName": {
												"argumentTypes": null,
												"id": 150,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1510:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV3.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1510:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "1486:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1485:17:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:0:0"
									},
									"scope": 238,
									"src": "1472:320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1940:364:0",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 236,
														"src": "2030:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2030:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2054:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2030:25:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 216,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "2135:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
																	}
																},
																"id": 218,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 217,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "2145:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2135:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct BallotV3.Proposal storage ref"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2135:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 220,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2163:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2135:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 234,
													"nodeType": "IfStatement",
													"src": "2131:167:0",
													"trueBody": {
														"id": 233,
														"nodeType": "Block",
														"src": "2181:117:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 222,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2199:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 223,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "2218:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 225,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 224,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 206,
																				"src": "2228:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2218:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct BallotV3.Proposal storage ref"
																			}
																		},
																		"id": 226,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2218:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2199:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 228,
																"nodeType": "ExpressionStatement",
																"src": "2199:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 229,
																		"name": "winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2261:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 230,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 206,
																		"src": "2279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2261:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 232,
																"nodeType": "ExpressionStatement",
																"src": "2261:22:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 209,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "2085:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 210,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "2092:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct BallotV3.Proposal storage ref[] storage ref"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2092:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2085:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"initializationExpression": {
													"assignments": [
														206
													],
													"declarations": [
														{
															"constant": false,
															"id": 206,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 235,
															"src": "2070:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 205,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2070:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 208,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2082:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2070:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2110:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 213,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "2110:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 215,
													"nodeType": "ExpressionStatement",
													"src": "2110:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2065:233:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "508b30c9",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 195,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1892:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV3.Phase)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1892:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV3.Phase"
													}
												}
											],
											"id": 197,
											"modifierName": {
												"argumentTypes": null,
												"id": 194,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1881:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV3.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1881:22:0"
										}
									],
									"name": "reqWinner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:2:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 237,
												"src": "1918:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1917:22:0"
									},
									"scope": 238,
									"src": "1853:451:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 239,
							"src": "34:2272:0"
						}
					],
					"src": "0:2306:0"
				},
				"id": 0
			}
		}
	}
}