{
	"id": "61666a85b22e7daddebab0e3026ede8e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV4.sol": {
				"content": "pragma solidity >=0.4.22 <=0.6.0;\ncontract BallotV4 {\n\n    struct Voter {                     \n        uint weight;\n        bool voted;\n        uint vote;\n    }\n    struct Proposal {                  \n        uint voteCount;\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;  \n    Proposal[] proposals;\n\n    enum Phase {Init,Regs, Vote, Done}  \n    Phase public state = Phase.Done; \n    \n       //modifiers\n   modifier validPhase(Phase reqPhase) \n    { require(state == reqPhase); \n      _; \n    } \n    \n    modifier onlyChair() \n     {require(msg.sender == chairperson);\n      _;\n     }\n\n    \n    constructor (uint numProposals) public  {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; // weight 2 for testing purposes\n        //proposals.length = numProposals; -- before 0.6.0\n        for (uint prop = 0; prop < numProposals; prop ++)\n            proposals.push(Proposal(0));\n        state = Phase.Regs;\n    }\n    \n     function changeState(Phase x) onlyChair public {\n        \n        require (x > state );\n       \n        state = x;\n     }\n    \n    function register(address voter) public validPhase(Phase.Regs) onlyChair {\n       \n        require (! voters[voter].voted);\n        voters[voter].weight = 1;\n        \n    }\n\n   \n    function vote(uint toProposal) public validPhase(Phase.Vote)  {\n      \n        Voter memory sender = voters[msg.sender];\n        \n        require (!sender.voted); \n        require (toProposal < proposals.length); \n        \n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n    function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {\n       \n        uint winningVoteCount = 0;\n        for (uint prop = 0; prop < proposals.length; prop++) \n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                winningProposal = prop;\n            }\n       assert(winningVoteCount>=3);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotV4.sol": {
				"BallotV4": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numProposals",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "enum BallotV4.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reqWinner",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BallotV4.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "toProposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotV4.sol\":34:2057  contract BallotV4 {... */\n  mstore(0x40, 0x80)\n    /* \"BallotV4.sol\":390:400  Phase.Done */\n  0x03\n    /* \"BallotV4.sol\":369:400  Phase public state = Phase.Done */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":618:958  constructor (uint numProposals) public  {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BallotV4.sol\":618:958  constructor (uint numProposals) public  {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"BallotV4.sol\":618:958  constructor (uint numProposals) public  {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotV4.sol\":682:692  msg.sender */\n  caller\n    /* \"BallotV4.sol\":668:679  chairperson */\n  0x00\n  dup1\n    /* \"BallotV4.sol\":668:692  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":731:732  2 */\n  0x02\n    /* \"BallotV4.sol\":702:708  voters */\n  0x01\n    /* \"BallotV4.sol\":702:721  voters[chairperson] */\n  0x00\n    /* \"BallotV4.sol\":709:720  chairperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV4.sol\":702:721  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV4.sol\":702:728  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotV4.sol\":702:732  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":839:848  uint prop */\n  0x00\n    /* \"BallotV4.sol\":851:852  0 */\n  dup1\n    /* \"BallotV4.sol\":839:852  uint prop = 0 */\n  swap1\n  pop\n    /* \"BallotV4.sol\":834:923  for (uint prop = 0; prop < numProposals; prop ++)... */\ntag_6:\n    /* \"BallotV4.sol\":861:873  numProposals */\n  dup2\n    /* \"BallotV4.sol\":854:858  prop */\n  dup2\n    /* \"BallotV4.sol\":854:873  prop < numProposals */\n  lt\n    /* \"BallotV4.sol\":834:923  for (uint prop = 0; prop < numProposals; prop ++)... */\n  iszero\n  tag_7\n  jumpi\n    /* \"BallotV4.sol\":896:905  proposals */\n  0x02\n    /* \"BallotV4.sol\":911:922  Proposal(0) */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"BallotV4.sol\":920:921  0 */\n  0x00\n    /* \"BallotV4.sol\":911:922  Proposal(0) */\n  dup2\n  mstore\n  pop\n    /* \"BallotV4.sol\":896:923  proposals.push(Proposal(0)) */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"BallotV4.sol\":896:923  proposals.push(Proposal(0)) */\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  pop\n  pop\n    /* \"BallotV4.sol\":875:882  prop ++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"BallotV4.sol\":834:923  for (uint prop = 0; prop < numProposals; prop ++)... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"BallotV4.sol\":941:951  Phase.Regs */\n  0x01\n    /* \"BallotV4.sol\":933:938  state */\n  0x03\n  0x00\n    /* \"BallotV4.sol\":933:951  state = Phase.Regs */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  invalid\ntag_10:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV4.sol\":618:958  constructor (uint numProposals) public  {... */\n  pop\n    /* \"BallotV4.sol\":34:2057  contract BallotV4 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV4.sol\":34:2057  contract BallotV4 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotV4.sol\":34:2057  contract BallotV4 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x268f1153\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4420e486\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x508b30c9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV4.sol\":1282:1634  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"BallotV4.sol\":1282:1634  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"BallotV4.sol\":969:1090  function changeState(Phase x) onlyChair public {... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"BallotV4.sol\":969:1090  function changeState(Phase x) onlyChair public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"BallotV4.sol\":1100:1272  function register(address voter) public validPhase(Phase.Regs) onlyChair {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"BallotV4.sol\":1100:1272  function register(address voter) public validPhase(Phase.Regs) onlyChair {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"BallotV4.sol\":1640:2055  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV4.sol\":369:400  Phase public state = Phase.Done */\n    tag_7:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV4.sol\":1282:1634  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n    tag_10:\n        /* \"BallotV4.sol\":1331:1341  Phase.Vote */\n      0x02\n        /* \"BallotV4.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n        /* \"BallotV4.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      eq\n        /* \"BallotV4.sol\":473:499  require(state == reqPhase) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"BallotV4.sol\":1361:1380  Voter memory sender */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"BallotV4.sol\":1383:1389  voters */\n      0x01\n        /* \"BallotV4.sol\":1383:1401  voters[msg.sender] */\n      0x00\n        /* \"BallotV4.sol\":1390:1400  msg.sender */\n      caller\n        /* \"BallotV4.sol\":1383:1401  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":1361:1401  Voter memory sender = voters[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"BallotV4.sol\":1430:1436  sender */\n      dup1\n        /* \"BallotV4.sol\":1430:1442  sender.voted */\n      0x20\n      add\n      mload\n        /* \"BallotV4.sol\":1429:1442  !sender.voted */\n      iszero\n        /* \"BallotV4.sol\":1420:1443  require (!sender.voted) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"BallotV4.sol\":1476:1485  proposals */\n      0x02\n        /* \"BallotV4.sol\":1476:1492  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV4.sol\":1463:1473  toProposal */\n      dup4\n        /* \"BallotV4.sol\":1463:1492  toProposal < proposals.length */\n      lt\n        /* \"BallotV4.sol\":1454:1493  require (toProposal < proposals.length) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"BallotV4.sol\":1528:1532  true */\n      0x01\n        /* \"BallotV4.sol\":1513:1519  sender */\n      dup2\n        /* \"BallotV4.sol\":1513:1525  sender.voted */\n      0x20\n      add\n        /* \"BallotV4.sol\":1513:1532  sender.voted = true */\n      swap1\n      iszero\n      iszero\n      swap1\n      dup2\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV4.sol\":1556:1566  toProposal */\n      dup3\n        /* \"BallotV4.sol\":1542:1548  sender */\n      dup2\n        /* \"BallotV4.sol\":1542:1553  sender.vote */\n      0x40\n      add\n        /* \"BallotV4.sol\":1542:1566  sender.vote = toProposal */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"BallotV4.sol\":1614:1620  sender */\n      dup1\n        /* \"BallotV4.sol\":1614:1627  sender.weight */\n      0x00\n      add\n      mload\n        /* \"BallotV4.sol\":1579:1588  proposals */\n      0x02\n        /* \"BallotV4.sol\":1589:1599  toProposal */\n      dup5\n        /* \"BallotV4.sol\":1579:1600  proposals[toProposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1579:1610  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV4.sol\":1579:1627  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":508:509  _ */\n      pop\n        /* \"BallotV4.sol\":1282:1634  function vote(uint toProposal) public validPhase(Phase.Vote)  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV4.sol\":969:1090  function changeState(Phase x) onlyChair public {... */\n    tag_13:\n        /* \"BallotV4.sol\":578:589  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":564:589  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":564:574  msg.sender */\n      caller\n        /* \"BallotV4.sol\":564:589  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV4.sol\":556:590  require(msg.sender == chairperson) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"BallotV4.sol\":1048:1053  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV4.sol\":1044:1053  x > state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n        /* \"BallotV4.sol\":1044:1045  x */\n      dup2\n        /* \"BallotV4.sol\":1044:1053  x > state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      gt\n        /* \"BallotV4.sol\":1035:1055  require (x > state ) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"BallotV4.sol\":1081:1082  x */\n      dup1\n        /* \"BallotV4.sol\":1073:1078  state */\n      0x03\n      0x00\n        /* \"BallotV4.sol\":1073:1082  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":969:1090  function changeState(Phase x) onlyChair public {... */\n      pop\n      jump\t// out\n        /* \"BallotV4.sol\":1100:1272  function register(address voter) public validPhase(Phase.Regs) onlyChair {... */\n    tag_16:\n        /* \"BallotV4.sol\":1151:1161  Phase.Regs */\n      0x01\n        /* \"BallotV4.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"BallotV4.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      eq\n        /* \"BallotV4.sol\":473:499  require(state == reqPhase) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"BallotV4.sol\":578:589  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":564:589  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV4.sol\":564:574  msg.sender */\n      caller\n        /* \"BallotV4.sol\":564:589  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"BallotV4.sol\":556:590  require(msg.sender == chairperson) */\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n        /* \"BallotV4.sol\":1202:1208  voters */\n      0x01\n        /* \"BallotV4.sol\":1202:1215  voters[voter] */\n      0x00\n        /* \"BallotV4.sol\":1209:1214  voter */\n      dup4\n        /* \"BallotV4.sol\":1202:1215  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":1202:1221  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV4.sol\":1200:1221  ! voters[voter].voted */\n      iszero\n        /* \"BallotV4.sol\":1191:1222  require (! voters[voter].voted) */\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n        /* \"BallotV4.sol\":1255:1256  1 */\n      0x01\n        /* \"BallotV4.sol\":1232:1238  voters */\n      dup1\n        /* \"BallotV4.sol\":1232:1245  voters[voter] */\n      0x00\n        /* \"BallotV4.sol\":1239:1244  voter */\n      dup5\n        /* \"BallotV4.sol\":1232:1245  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV4.sol\":1232:1252  voters[voter].weight */\n      0x00\n      add\n        /* \"BallotV4.sol\":1232:1256  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV4.sol\":1100:1272  function register(address voter) public validPhase(Phase.Regs) onlyChair {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV4.sol\":1640:2055  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n    tag_18:\n        /* \"BallotV4.sol\":1705:1725  uint winningProposal */\n      0x00\n        /* \"BallotV4.sol\":1679:1689  Phase.Done */\n      0x03\n        /* \"BallotV4.sol\":490:498  reqPhase */\n      dup1\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n        /* \"BallotV4.sol\":481:486  state */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV4.sol\":481:498  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_50\n      jumpi\n      invalid\n    tag_50:\n      eq\n        /* \"BallotV4.sol\":473:499  require(state == reqPhase) */\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n        /* \"BallotV4.sol\":1745:1766  uint winningVoteCount */\n      0x00\n        /* \"BallotV4.sol\":1769:1770  0 */\n      dup1\n        /* \"BallotV4.sol\":1745:1770  uint winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotV4.sol\":1785:1794  uint prop */\n      0x00\n        /* \"BallotV4.sol\":1797:1798  0 */\n      dup1\n        /* \"BallotV4.sol\":1785:1798  uint prop = 0 */\n      swap1\n      pop\n        /* \"BallotV4.sol\":1780:2013  for (uint prop = 0; prop < proposals.length; prop++) ... */\n    tag_53:\n        /* \"BallotV4.sol\":1807:1816  proposals */\n      0x02\n        /* \"BallotV4.sol\":1807:1823  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV4.sol\":1800:1804  prop */\n      dup2\n        /* \"BallotV4.sol\":1800:1823  prop < proposals.length */\n      lt\n        /* \"BallotV4.sol\":1780:2013  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      iszero\n      tag_54\n      jumpi\n        /* \"BallotV4.sol\":1878:1894  winningVoteCount */\n      dup2\n        /* \"BallotV4.sol\":1850:1859  proposals */\n      0x02\n        /* \"BallotV4.sol\":1860:1864  prop */\n      dup3\n        /* \"BallotV4.sol\":1850:1865  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1850:1875  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV4.sol\":1850:1894  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV4.sol\":1846:2013  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_58\n      jumpi\n        /* \"BallotV4.sol\":1933:1942  proposals */\n      0x02\n        /* \"BallotV4.sol\":1943:1947  prop */\n      dup2\n        /* \"BallotV4.sol\":1933:1948  proposals[prop] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV4.sol\":1933:1958  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV4.sol\":1914:1958  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV4.sol\":1994:1998  prop */\n      dup1\n        /* \"BallotV4.sol\":1976:1998  winningProposal = prop */\n      swap4\n      pop\n        /* \"BallotV4.sol\":1846:2013  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_58:\n        /* \"BallotV4.sol\":1825:1831  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotV4.sol\":1780:2013  for (uint prop = 0; prop < proposals.length; prop++) ... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"BallotV4.sol\":2046:2047  3 */\n      0x03\n        /* \"BallotV4.sol\":2028:2044  winningVoteCount */\n      dup2\n        /* \"BallotV4.sol\":2028:2047  winningVoteCount>=3 */\n      lt\n      iszero\n        /* \"BallotV4.sol\":2021:2048  assert(winningVoteCount>=3) */\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n        /* \"BallotV4.sol\":508:509  _ */\n      pop\n        /* \"BallotV4.sol\":1640:2055  function reqWinner() public validPhase(Phase.Done) view returns (uint winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotV4.sol\":369:400  Phase public state = Phase.Done */\n    tag_20:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BallotV4.sol\":34:2057  contract BallotV4 {... */\n    tag_28:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2db0a5400044b1da33af86bdefc540c7a91aa9867a11cfdd92c8b0ebc69830e64736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260038060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516107093803806107098339818101604052602081101561005657600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060008090505b8181101561016e57600260405180602001604052806000815250908060018154018082558091505060019003906000526020600020016000909190919091506000820151816000015550508080600101915050610116565b506001600360006101000a81548160ff0219169083600381111561018e57fe5b021790555050610566806101a36000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f11531461008a5780634420e486146100bb578063508b30c9146100ff578063c19d93fb1461011d575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610149565b005b6100b9600480360360208110156100a057600080fd5b81019080803560ff16906020019092919050505061026b565b005b6100fd600480360360208110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031b565b005b61010761044c565b6040518082815260200191505060405180910390f35b6101256104fa565b6040518082600381111561013557fe5b60ff16815260200191505060405180910390f35b600280600381111561015757fe5b600360009054906101000a900460ff16600381111561017257fe5b1461017c57600080fd5b61018461050d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001511561020e57600080fd5b600280549050831061021f57600080fd5b60018160200190151590811515815250508281604001818152505080600001516002848154811061024c57fe5b9060005260206000200160000160008282540192505081905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c457600080fd5b600360009054906101000a900460ff1660038111156102df57fe5b8160038111156102eb57fe5b116102f557600080fd5b80600360006101000a81548160ff0219169083600381111561031357fe5b021790555050565b600180600381111561032957fe5b600360009054906101000a900460ff16600381111561034457fe5b1461034e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a757600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161561040157600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050565b6000600380600381111561045c57fe5b600360009054906101000a900460ff16600381111561047757fe5b1461048157600080fd5b600080905060008090505b6002805490508110156104e95781600282815481106104a757fe5b906000526020600020016000015411156104dc57600281815481106104c857fe5b906000526020600020016000015491508093505b808060010191505061048c565b5060038110156104f557fe5b505090565b600360009054906101000a900460ff1681565b60405180606001604052806000815260200160001515815260200160008152509056fea2646970667358221220b2db0a5400044b1da33af86bdefc540c7a91aa9867a11cfdd92c8b0ebc69830e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x709 CODESIZE SUB DUP1 PUSH2 0x709 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16E JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x116 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x18E JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP PUSH2 0x566 DUP1 PUSH2 0x1A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DF JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EB JUMPI INVALID JUMPDEST GT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x329 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x344 JUMPI INVALID JUMPDEST EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45C JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x477 JUMPI INVALID JUMPDEST EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x48C JUMP JUMPDEST POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xDB EXP SLOAD STOP DIV 0x4B SAR LOG3 GASPRICE 0xF8 PUSH12 0xDEFC540C7A91AA9867A11CFD 0xD9 0x2C DUP12 0xE 0xBC PUSH10 0x830E64736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:2023:0:-:0;;;390:10;369:31;;;;;;;;;;;;;;;;;;;;;;;;;;618:340;8:9:-1;5:2;;;30:1;27;20:12;5:2;618:340:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;618:340:0;;;;;;;;;;;;;;;;682:10;668:11;;:24;;;;;;;;;;;;;;;;;;731:1;702:6;:19;709:11;;;;;;;;;;;702:19;;;;;;;;;;;;;;;:26;;:30;;;;839:9;851:1;839:13;;834:89;861:12;854:4;:19;834:89;;;896:9;911:11;;;;;;;;920:1;911:11;;;896:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;896:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:7;;;;;;;834:89;;;;941:10;933:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;618:340;34:2023;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630121b93f1461005c578063268f11531461008a5780634420e486146100bb578063508b30c9146100ff578063c19d93fb1461011d575b600080fd5b6100886004803603602081101561007257600080fd5b8101908080359060200190929190505050610149565b005b6100b9600480360360208110156100a057600080fd5b81019080803560ff16906020019092919050505061026b565b005b6100fd600480360360208110156100d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031b565b005b61010761044c565b6040518082815260200191505060405180910390f35b6101256104fa565b6040518082600381111561013557fe5b60ff16815260200191505060405180910390f35b600280600381111561015757fe5b600360009054906101000a900460ff16600381111561017257fe5b1461017c57600080fd5b61018461050d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16151515158152602001600282015481525050905080602001511561020e57600080fd5b600280549050831061021f57600080fd5b60018160200190151590811515815250508281604001818152505080600001516002848154811061024c57fe5b9060005260206000200160000160008282540192505081905550505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102c457600080fd5b600360009054906101000a900460ff1660038111156102df57fe5b8160038111156102eb57fe5b116102f557600080fd5b80600360006101000a81548160ff0219169083600381111561031357fe5b021790555050565b600180600381111561032957fe5b600360009054906101000a900460ff16600381111561034457fe5b1461034e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a757600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161561040157600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050565b6000600380600381111561045c57fe5b600360009054906101000a900460ff16600381111561047757fe5b1461048157600080fd5b600080905060008090505b6002805490508110156104e95781600282815481106104a757fe5b906000526020600020016000015411156104dc57600281815481106104c857fe5b906000526020600020016000015491508093505b808060010191505061048c565b5060038110156104f557fe5b505090565b600360009054906101000a900460ff1681565b60405180606001604052806000815260200160001515815260200160008152509056fea2646970667358221220b2db0a5400044b1da33af86bdefc540c7a91aa9867a11cfdd92c8b0ebc69830e64736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x268F1153 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x4420E486 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x508B30C9 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x11D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x149 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x172 JUMPI INVALID JUMPDEST EQ PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x50D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 ADD SWAP1 ISZERO ISZERO SWAP1 DUP2 ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x24C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2DF JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2EB JUMPI INVALID JUMPDEST GT PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x329 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x344 JUMPI INVALID JUMPDEST EQ PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x401 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45C JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x477 JUMPI INVALID JUMPDEST EQ PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4C8 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x48C JUMP JUMPDEST POP PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xDB EXP SLOAD STOP DIV 0x4B SAR LOG3 GASPRICE 0xF8 PUSH12 0xDEFC540C7A91AA9867A11CFD 0xD9 0x2C DUP12 0xE 0xBC PUSH10 0x830E64736F6C63430006 STOP STOP CALLER ",
							"sourceMap": "34:2023:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34:2023:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:352;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1282:352:0;;;;;;;;;;;;;;;;;:::i;:::-;;969:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;969:121:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1100:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1100:172:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1640:415;;;:::i;:::-;;;;;;;;;;;;;;;;;;;369:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1282:352;1331:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;1361:19:::1;;:::i;:::-;1383:6;:18;1390:10;1383:18;;;;;;;;;;;;;;;1361:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1430:6;:12;;;1429:13;1420:23;;;::::0;::::1;;1476:9;:16;;;;1463:10;:29;1454:39;;;::::0;::::1;;1528:4;1513:6;:12;;:19;;;;;;;;;::::0;::::1;1556:10;1542:6;:11;;:24;;;::::0;::::1;1614:6;:13;;;1579:9;1589:10;1579:21;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;508:1;1282:352:::0;;:::o;969:121::-;578:11;;;;;;;;;;;564:25;;:10;:25;;;556:34;;;;;;1048:5:::1;;;;;;;;;;;1044:9;;;;;;;;:1;:9;;;;;;;;;1035:20;;;::::0;::::1;;1081:1;1073:5;;:9;;;;;;;;;;;;;;;;;;;;;;;;969:121:::0;:::o;1100:172::-;1151:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;578:11:::1;::::0;::::1;;;;;;;;;564:25;;:10;:25;;;556:34;;;::::0;::::1;;1202:6:::2;:13;1209:5;1202:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;1200:21;1191:31;;;::::0;::::2;;1255:1;1232:6:::0;:13:::2;1239:5;1232:13;;;;;;;;;;;;;;;:20;;:24;;;;1100:172:::0;;:::o;1640:415::-;1705:20;1679:10;490:8;481:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;473:26;;;;;;1745:21:::1;1769:1:::0;1745:25:::1;;1785:9;1797:1:::0;1785:13:::1;;1780:233;1807:9;:16;;;;1800:4;:23;1780:233;;;1878:16;1850:9;1860:4;1850:15;;;;;;;;;;;;;;;:25;;;:44;1846:167;;;1933:9;1943:4;1933:15;;;;;;;;;;;;;;;:25;;;1914:44;;1994:4;1976:22;;1846:167;1825:6;;;;;;;1780:233;;;;2046:1;2028:16;:19;;2021:27;;;;508:1;1640:415:::0;;:::o;369:31::-;;;;;;;;;;;;;:::o;34:2023::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "276400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changeState(uint8)": "22902",
								"register(address)": "23104",
								"reqWinner()": "infinite",
								"state()": "1139",
								"vote(uint256)": "26532"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "MSTORE"
								},
								{
									"begin": 390,
									"end": 400,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "EXP"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SLOAD"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "MUL"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "NOT"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "AND"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SWAP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP4"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "DUP2"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "GT"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "ISZERO"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "JUMPI"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "INVALID"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "JUMPDEST"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "MUL"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "OR"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SWAP1"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "SSTORE"
								},
								{
									"begin": 369,
									"end": 400,
									"name": "POP"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "POP"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "MLOAD"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "PUSHSIZE"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "CODESIZE"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SUB"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "PUSHSIZE"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP4"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "CODECOPY"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP2"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP2"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "ADD"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP2"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "ADD"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "DUP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "MLOAD"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "ADD"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP3"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP2"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "SWAP1"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "POP"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "POP"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "POP"
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER"
								},
								{
									"begin": 668,
									"end": 679,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 668,
									"end": 679,
									"name": "DUP1"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "EXP"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "DUP2"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "SLOAD"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "DUP2"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "MUL"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "NOT"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "AND"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "SWAP1"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "DUP4"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "AND"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "MUL"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "OR"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "SWAP1"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "SSTORE"
								},
								{
									"begin": 668,
									"end": 692,
									"name": "POP"
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 702,
									"end": 708,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "DUP1"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "SLOAD"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "EXP"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "SWAP1"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "DIV"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 709,
									"end": 720,
									"name": "AND"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "AND"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "AND"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "DUP2"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "MSTORE"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "ADD"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "SWAP1"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "DUP2"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "MSTORE"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "ADD"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 702,
									"end": 721,
									"name": "KECCAK256"
								},
								{
									"begin": 702,
									"end": 728,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 702,
									"end": 728,
									"name": "ADD"
								},
								{
									"begin": 702,
									"end": 732,
									"name": "DUP2"
								},
								{
									"begin": 702,
									"end": 732,
									"name": "SWAP1"
								},
								{
									"begin": 702,
									"end": 732,
									"name": "SSTORE"
								},
								{
									"begin": 702,
									"end": 732,
									"name": "POP"
								},
								{
									"begin": 839,
									"end": 848,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 851,
									"end": 852,
									"name": "DUP1"
								},
								{
									"begin": 839,
									"end": 852,
									"name": "SWAP1"
								},
								{
									"begin": 839,
									"end": 852,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "JUMPDEST"
								},
								{
									"begin": 861,
									"end": 873,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 858,
									"name": "DUP2"
								},
								{
									"begin": 854,
									"end": 873,
									"name": "LT"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "ISZERO"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "JUMPI"
								},
								{
									"begin": 896,
									"end": 905,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "MLOAD"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "DUP1"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "ADD"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "MSTORE"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "DUP1"
								},
								{
									"begin": 920,
									"end": 921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "DUP2"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "MSTORE"
								},
								{
									"begin": 911,
									"end": 922,
									"name": "POP"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SUB"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "MSTORE"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "KECCAK256"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "ADD"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP2"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP2"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP1"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SWAP2"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "POP"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "DUP3"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "ADD"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "MLOAD"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "DUP2"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "ADD"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "SSTORE"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "POP"
								},
								{
									"begin": 896,
									"end": 923,
									"name": "POP"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "DUP1"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "DUP1"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "ADD"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "SWAP2"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "POP"
								},
								{
									"begin": 875,
									"end": 882,
									"name": "POP"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "JUMP"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "JUMPDEST"
								},
								{
									"begin": 834,
									"end": 923,
									"name": "POP"
								},
								{
									"begin": 941,
									"end": 951,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 933,
									"end": 938,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 933,
									"end": 938,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "EXP"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "DUP2"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "SLOAD"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "DUP2"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "MUL"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "NOT"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "AND"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "SWAP1"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "DUP4"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "DUP2"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "GT"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "ISZERO"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "JUMPI"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "INVALID"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "JUMPDEST"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "MUL"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "OR"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "SWAP1"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "SSTORE"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "POP"
								},
								{
									"begin": 618,
									"end": 958,
									"name": "POP"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "CODECOPY"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 34,
									"end": 2057,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2db0a5400044b1da33af86bdefc540c7a91aa9867a11cfdd92c8b0ebc69830e64736f6c63430006000033",
									".code": [
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "LT"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "SHR"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "508B30C9"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "C19D93FB"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "EQ"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPI"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "REVERT"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "DUP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "DUP2"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "DUP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "DUP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "ADD"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP3"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP2"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "SWAP1"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "STOP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "DUP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "AND"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "ADD"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP3"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP2"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "SWAP1"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "STOP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "JUMPDEST"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "DUP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "ADD"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "DUP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "DUP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "AND"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "ADD"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP3"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP2"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "JUMPDEST"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "STOP"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "MLOAD"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "DUP3"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "DUP2"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "MSTORE"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "ADD"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "MLOAD"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "DUP1"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "SWAP2"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "SUB"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "RETURN"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "GT"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "ISZERO"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPI"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "INVALID"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SUB"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "RETURN"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "JUMPDEST"
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1361,
											"end": 1380,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1361,
											"end": 1380,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1361,
											"end": 1380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1361,
											"end": 1380,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1361,
											"end": 1380,
											"name": "JUMPDEST"
										},
										{
											"begin": 1383,
											"end": 1389,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1400,
											"name": "CALLER"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "AND"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "AND"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "KECCAK256"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SLOAD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SLOAD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "EXP"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DIV"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "AND"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ISZERO"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ISZERO"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ISZERO"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ISZERO"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SLOAD"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1361,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "ADD"
										},
										{
											"begin": 1430,
											"end": 1442,
											"name": "MLOAD"
										},
										{
											"begin": 1429,
											"end": 1442,
											"name": "ISZERO"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "JUMPI"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "DUP1"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "REVERT"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1420,
											"end": 1443,
											"name": "JUMPDEST"
										},
										{
											"begin": 1476,
											"end": 1485,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP1"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SLOAD"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "POP"
										},
										{
											"begin": 1463,
											"end": 1473,
											"name": "DUP4"
										},
										{
											"begin": 1463,
											"end": 1492,
											"name": "LT"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "JUMPI"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "REVERT"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1454,
											"end": 1493,
											"name": "JUMPDEST"
										},
										{
											"begin": 1528,
											"end": 1532,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1513,
											"end": 1525,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "ISZERO"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "MSTORE"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "POP"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "POP"
										},
										{
											"begin": 1556,
											"end": 1566,
											"name": "DUP3"
										},
										{
											"begin": 1542,
											"end": 1548,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1553,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "DUP2"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "MSTORE"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1542,
											"end": 1566,
											"name": "POP"
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1"
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "ADD"
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "MLOAD"
										},
										{
											"begin": 1579,
											"end": 1588,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1589,
											"end": 1599,
											"name": "DUP5"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "SLOAD"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "LT"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "JUMPI"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "INVALID"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "JUMPDEST"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "MSTORE"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "KECCAK256"
										},
										{
											"begin": 1579,
											"end": 1600,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "DUP3"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "SLOAD"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "ADD"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "SWAP3"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "POP"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "DUP2"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "SWAP1"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "SSTORE"
										},
										{
											"begin": 1579,
											"end": 1627,
											"name": "POP"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "POP"
										},
										{
											"begin": 1282,
											"end": 1634,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "DUP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "EXP"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 574,
											"name": "CALLER"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "EQ"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPI"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "DUP1"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "REVERT"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "SLOAD"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "EXP"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "DIV"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1048,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "ISZERO"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "INVALID"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "ISZERO"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "INVALID"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "GT"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "REVERT"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1035,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1081,
											"end": 1082,
											"name": "DUP1"
										},
										{
											"begin": 1073,
											"end": 1078,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1073,
											"end": 1078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "EXP"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "SLOAD"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "MUL"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "NOT"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "AND"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP4"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP2"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "GT"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "ISZERO"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "JUMPI"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "INVALID"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "MUL"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "OR"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "SWAP1"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "SSTORE"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "POP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "POP"
										},
										{
											"begin": 969,
											"end": 1090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "JUMPDEST"
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "DUP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SLOAD"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "EXP"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "SWAP1"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "DIV"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 574,
											"name": "CALLER"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "AND"
										},
										{
											"begin": 564,
											"end": 589,
											"name": "EQ"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPI"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "DUP1"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "REVERT"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 556,
											"end": 590,
											"name": "JUMPDEST"
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP4"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "AND"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "DUP2"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "MSTORE"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1215,
											"name": "KECCAK256"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "ADD"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SLOAD"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "EXP"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "SWAP1"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "DIV"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1202,
											"end": 1221,
											"name": "AND"
										},
										{
											"begin": 1200,
											"end": 1221,
											"name": "ISZERO"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "JUMPI"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "REVERT"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1191,
											"end": 1222,
											"name": "JUMPDEST"
										},
										{
											"begin": 1255,
											"end": 1256,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1232,
											"end": 1238,
											"name": "DUP1"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1244,
											"name": "DUP5"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1245,
											"name": "KECCAK256"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "ADD"
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "DUP2"
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "SWAP1"
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "SSTORE"
										},
										{
											"begin": 1232,
											"end": 1256,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1272,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1705,
											"end": 1725,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1689,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 490,
											"end": 498,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SLOAD"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "EXP"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 481,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "DUP2"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "GT"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ISZERO"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "INVALID"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "JUMPDEST"
										},
										{
											"begin": 481,
											"end": 498,
											"name": "EQ"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPI"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "DUP1"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "REVERT"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 473,
											"end": 499,
											"name": "JUMPDEST"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "DUP1"
										},
										{
											"begin": 1745,
											"end": 1770,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1770,
											"name": "POP"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "DUP1"
										},
										{
											"begin": 1785,
											"end": 1798,
											"name": "SWAP1"
										},
										{
											"begin": 1785,
											"end": 1798,
											"name": "POP"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "JUMPDEST"
										},
										{
											"begin": 1807,
											"end": 1816,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1807,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1807,
											"end": 1823,
											"name": "SLOAD"
										},
										{
											"begin": 1807,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1807,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1800,
											"end": 1804,
											"name": "DUP2"
										},
										{
											"begin": 1800,
											"end": 1823,
											"name": "LT"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "ISZERO"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "JUMPI"
										},
										{
											"begin": 1878,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "DUP3"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "SLOAD"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "DUP2"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "LT"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "JUMPI"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "INVALID"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "SWAP1"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "MSTORE"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "KECCAK256"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1875,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1875,
											"name": "SLOAD"
										},
										{
											"begin": 1850,
											"end": 1894,
											"name": "GT"
										},
										{
											"begin": 1846,
											"end": 2013,
											"name": "ISZERO"
										},
										{
											"begin": 1846,
											"end": 2013,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 2013,
											"name": "JUMPI"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "DUP2"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "SLOAD"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "DUP2"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "LT"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "JUMPI"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "INVALID"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "JUMPDEST"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "SWAP1"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "MSTORE"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "KECCAK256"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "ADD"
										},
										{
											"begin": 1933,
											"end": 1958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1958,
											"name": "ADD"
										},
										{
											"begin": 1933,
											"end": 1958,
											"name": "SLOAD"
										},
										{
											"begin": 1914,
											"end": 1958,
											"name": "SWAP2"
										},
										{
											"begin": 1914,
											"end": 1958,
											"name": "POP"
										},
										{
											"begin": 1994,
											"end": 1998,
											"name": "DUP1"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "SWAP4"
										},
										{
											"begin": 1976,
											"end": 1998,
											"name": "POP"
										},
										{
											"begin": 1846,
											"end": 2013,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1846,
											"end": 2013,
											"name": "JUMPDEST"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DUP1"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "DUP1"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "ADD"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "SWAP2"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "POP"
										},
										{
											"begin": 1825,
											"end": 1831,
											"name": "POP"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "JUMP"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "JUMPDEST"
										},
										{
											"begin": 1780,
											"end": 2013,
											"name": "POP"
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2028,
											"end": 2044,
											"name": "DUP2"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "LT"
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "ISZERO"
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "JUMPI"
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "INVALID"
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "JUMPDEST"
										},
										{
											"begin": 508,
											"end": 509,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "POP"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "SWAP1"
										},
										{
											"begin": 1640,
											"end": 2055,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SLOAD"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "EXP"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DIV"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 400,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMPDEST"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MLOAD"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "ISZERO"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "ADD"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "DUP2"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "MSTORE"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "POP"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "SWAP1"
										},
										{
											"begin": 34,
											"end": 2057,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changeState(uint8)": "268f1153",
							"register(address)": "4420e486",
							"reqWinner()": "508b30c9",
							"state()": "c19d93fb",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numProposals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum BallotV4.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reqWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BallotV4.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"toProposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"BallotV4.sol\":\"BallotV4\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV4.sol\":{\"keccak256\":\"0x49a07f90991798b10b3e0a50dc428718b9c219a530d8c82c90b579f154e08553\",\"urls\":[\"bzz-raw://0773ed297593b5aa2538f9c60e7480e80c5de94f83425ac2fd4fa5cbfa6c7faa\",\"dweb:/ipfs/Qmci26vmECuMrMP4PockF2J4VGdxgAsD8EBcdFE7cgFMAn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "BallotV4.sol:BallotV4",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 17,
								"contract": "BallotV4.sol:BallotV4",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)8_storage)"
							},
							{
								"astId": 20,
								"contract": "BallotV4.sol:BallotV4",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)11_storage)dyn_storage"
							},
							{
								"astId": 29,
								"contract": "BallotV4.sol:BallotV4",
								"label": "state",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(Phase)25"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)11_storage)dyn_storage": {
								"base": "t_struct(Proposal)11_storage",
								"encoding": "dynamic_array",
								"label": "struct BallotV4.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Phase)25": {
								"encoding": "inplace",
								"label": "enum BallotV4.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)8_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BallotV4.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)8_storage"
							},
							"t_struct(Proposal)11_storage": {
								"encoding": "inplace",
								"label": "struct BallotV4.Proposal",
								"members": [
									{
										"astId": 10,
										"contract": "BallotV4.sol:BallotV4",
										"label": "voteCount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Voter)8_storage": {
								"encoding": "inplace",
								"label": "struct BallotV4.Voter",
								"members": [
									{
										"astId": 3,
										"contract": "BallotV4.sol:BallotV4",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "BallotV4.sol:BallotV4",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 7,
										"contract": "BallotV4.sol:BallotV4",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"BallotV4.sol": {
				"ast": {
					"absolutePath": "BallotV4.sol",
					"exportedSymbols": {
						"BallotV4": [
							241
						]
					},
					"id": 242,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 241,
							"linearizedBaseContracts": [
								241
							],
							"name": "BallotV4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BallotV4.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "103:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "103:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "124:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "124:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 8,
											"src": "144:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 6,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "144:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 241,
									"src": "59:101:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BallotV4.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 11,
											"src": "209:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "209:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 241,
									"src": "165:65:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "236:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "261:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct BallotV4.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "269:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "261:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct BallotV4.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "280:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct BallotV4.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "301:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct BallotV4.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "301:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct BallotV4.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "301:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct BallotV4.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"canonicalName": "BallotV4.Phase",
									"id": 25,
									"members": [
										{
											"id": 21,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "340:4:0"
										},
										{
											"id": 22,
											"name": "Regs",
											"nodeType": "EnumValue",
											"src": "345:4:0"
										},
										{
											"id": 23,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "351:4:0"
										},
										{
											"id": 24,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "357:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "328:34:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 29,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 241,
									"src": "369:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$25",
										"typeString": "enum BallotV4.Phase"
									},
									"typeName": {
										"contractScope": null,
										"id": 26,
										"name": "Phase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 25,
										"src": "369:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$25",
											"typeString": "enum BallotV4.Phase"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 27,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 25,
											"src": "390:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
												"typeString": "type(enum BallotV4.Phase)"
											}
										},
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Done",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "390:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$25",
											"typeString": "enum BallotV4.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "471:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$25",
																"typeString": "enum BallotV4.Phase"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "481:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV4.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "reqPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "490:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV4.Phase"
																}
															},
															"src": "481:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "473:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "473:26:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "508:1:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"name": "validPhase",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "reqPhase",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 41,
												"src": "450:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$25",
													"typeString": "enum BallotV4.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 30,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 25,
													"src": "450:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "449:16:0"
									},
									"src": "430:87:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "555:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 44,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "564:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "564:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 46,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "578:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "564:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "556:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "556:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "556:34:0"
											},
											{
												"id": 50,
												"nodeType": "PlaceholderStatement",
												"src": "598:1:0"
											}
										]
									},
									"documentation": null,
									"id": 52,
									"name": "onlyChair",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:0"
									},
									"src": "528:79:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "658:300:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 57,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "668:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 58,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "682:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "682:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "668:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "668:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "702:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV4.Voter storage ref)"
																}
															},
															"id": 64,
															"indexExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "709:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "702:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV4.Voter storage ref"
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "702:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "731:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "702:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "702:30:0"
											},
											{
												"body": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 83,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "920:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 82,
																	"name": "Proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "911:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Proposal_$11_storage_ptr_$",
																		"typeString": "type(struct BallotV4.Proposal storage pointer)"
																	}
																},
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "911:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct BallotV4.Proposal memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Proposal_$11_memory",
																	"typeString": "struct BallotV4.Proposal memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "896:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "896:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$11_storage_$returns$__$",
																"typeString": "function (struct BallotV4.Proposal storage ref)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "896:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 86,
													"nodeType": "ExpressionStatement",
													"src": "896:27:0"
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 73,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "854:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "861:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "854:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 87,
												"initializationExpression": {
													"assignments": [
														70
													],
													"declarations": [
														{
															"constant": false,
															"id": 70,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 87,
															"src": "839:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 69,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "839:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 72,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "851:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "839:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "875:7:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 76,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 70,
															"src": "875:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 78,
													"nodeType": "ExpressionStatement",
													"src": "875:7:0"
												},
												"nodeType": "ForStatement",
												"src": "834:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 88,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "933:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV4.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 89,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
																"typeString": "type(enum BallotV4.Phase)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Regs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "941:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV4.Phase"
														}
													},
													"src": "933:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "933:18:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"name": "numProposals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 94,
												"src": "631:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "630:19:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:0:0"
									},
									"scope": 241,
									"src": "618:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1016:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$25",
																"typeString": "enum BallotV4.Phase"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 102,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1044:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV4.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1048:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$25",
																	"typeString": "enum BallotV4.Phase"
																}
															},
															"src": "1044:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "1035:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1035:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 107,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1073:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV4.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 108,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1081:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$25",
															"typeString": "enum BallotV4.Phase"
														}
													},
													"src": "1073:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1073:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "268f1153",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 99,
											"modifierName": {
												"argumentTypes": null,
												"id": 98,
												"name": "onlyChair",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 52,
												"src": "999:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "999:9:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 112,
												"src": "990:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$25",
													"typeString": "enum BallotV4.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 95,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 25,
													"src": "990:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "989:9:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:0:0"
									},
									"scope": 241,
									"src": "969:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1173:99:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1200:21:0",
															"subExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 124,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1202:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																			"typeString": "mapping(address => struct BallotV4.Voter storage ref)"
																		}
																	},
																	"id": 126,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 125,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "1209:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1202:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$8_storage",
																		"typeString": "struct BallotV4.Voter storage ref"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1202:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "1191:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "1191:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 131,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1232:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct BallotV4.Voter storage ref)"
																}
															},
															"id": 133,
															"indexExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "1239:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1232:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct BallotV4.Voter storage ref"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1232:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1255:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1232:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1232:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4420e486",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 117,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1151:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV4.Phase)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Regs",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1151:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												}
											],
											"id": 119,
											"modifierName": {
												"argumentTypes": null,
												"id": 116,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1140:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV4.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1140:22:0"
										},
										{
											"arguments": null,
											"id": 121,
											"modifierName": {
												"argumentTypes": null,
												"id": 120,
												"name": "onlyChair",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 52,
												"src": "1163:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1163:9:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 139,
												"src": "1118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1117:15:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:0"
									},
									"scope": 241,
									"src": "1100:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1344:290:0",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 188,
														"src": "1361:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
															"typeString": "struct BallotV4.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 148,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1361:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct BallotV4.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 150,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1383:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct BallotV4.Voter storage ref)"
														}
													},
													"id": 153,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 151,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1390:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1390:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1383:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct BallotV4.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1361:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1429:13:0",
															"subExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 156,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "1430:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																		"typeString": "struct BallotV4.Voter memory"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "1430:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1420:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "1463:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 163,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1476:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1476:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1463:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															259,
															260
														],
														"referencedDeclaration": 259,
														"src": "1454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "1454:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 168,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV4.Voter memory"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1513:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1528:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1513:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1513:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 174,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV4.Voter memory"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1542:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 177,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "1556:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1542:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1542:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1579:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
																}
															},
															"id": 182,
															"indexExpression": {
																"argumentTypes": null,
																"id": 181,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "1589:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1579:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct BallotV4.Proposal storage ref"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1579:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 184,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_memory_ptr",
																"typeString": "struct BallotV4.Voter memory"
															}
														},
														"id": 185,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1614:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1579:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1579:48:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0121b93f",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 144,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1331:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV4.Phase)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1331:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												}
											],
											"id": 146,
											"modifierName": {
												"argumentTypes": null,
												"id": 143,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1320:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV4.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1320:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "1296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1296:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1295:17:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:0"
									},
									"scope": 241,
									"src": "1282:352:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "1727:328:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 239,
														"src": "1745:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1745:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1769:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1745:25:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1850:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
																	}
																},
																"id": 215,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "1860:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1850:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct BallotV4.Proposal storage ref"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1850:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1878:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1850:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 231,
													"nodeType": "IfStatement",
													"src": "1846:167:0",
													"trueBody": {
														"id": 230,
														"nodeType": "Block",
														"src": "1896:117:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 219,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "1914:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "1933:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 222,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 203,
																				"src": "1943:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1933:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct BallotV4.Proposal storage ref"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1933:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1914:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 225,
																"nodeType": "ExpressionStatement",
																"src": "1914:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1976:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 227,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "1994:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1976:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 229,
																"nodeType": "ExpressionStatement",
																"src": "1976:22:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 206,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1800:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 207,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1807:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct BallotV4.Proposal storage ref[] storage ref"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1807:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1800:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"initializationExpression": {
													"assignments": [
														203
													],
													"declarations": [
														{
															"constant": false,
															"id": 203,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 232,
															"src": "1785:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 202,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1785:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 205,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1797:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1785:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1825:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 210,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1825:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 212,
													"nodeType": "ExpressionStatement",
													"src": "1825:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1780:233:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 234,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2028:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "33",
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2046:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "2028:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 233,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "2021:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2021:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "508b30c9",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 192,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1679:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$25_$",
															"typeString": "type(enum BallotV4.Phase)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1679:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$25",
														"typeString": "enum BallotV4.Phase"
													}
												}
											],
											"id": 194,
											"modifierName": {
												"argumentTypes": null,
												"id": 191,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "1668:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$25_$",
													"typeString": "modifier (enum BallotV4.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1668:22:0"
										}
									],
									"name": "reqWinner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1658:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 240,
												"src": "1705:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:22:0"
									},
									"scope": 241,
									"src": "1640:415:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 242,
							"src": "34:2023:0"
						}
					],
					"src": "0:2057:0"
				},
				"id": 0
			}
		}
	}
}